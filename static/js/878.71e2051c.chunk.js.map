{"version":3,"file":"static/js/878.71e2051c.chunk.js","mappings":"2NACaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAjB,E,iICY3BC,EAAaC,OAAO,sDAEpBC,GAAgBC,EAAAA,EAAAA,IAAO,CAC3BC,MAAMC,EAAAA,EAAAA,MACHC,IAAI,EAAG,mCACPC,SAAS,qBACZC,QAAQH,EAAAA,EAAAA,MACLI,QAAQT,EAAY,iBACpBO,SAAS,uBAGRG,EAAgB,CACpBN,KAAM,GACNI,OAAQ,IAGGG,EAAc,WACzB,OAAgCC,EAAAA,EAAAA,MAAxBC,KAAMC,OAAd,MAAyB,GAAzB,EACA,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAqBC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,WAAYC,EAA1C,EAA0CA,UAGpCC,EAAY,mCAAG,WAAOC,EAAP,mFAAiBC,EAAjB,EAAiBA,UAC9BC,EAAgB,CACpBnB,KAAMiB,EAAOjB,KAAKoB,OAClBhB,OAAQa,EAAOb,OAAOgB,QAGlBC,EAAkBX,EAASY,MAC/B,SAAAC,GAAO,OAAIA,EAAQvB,KAAKwB,gBAAkBL,EAAcnB,KAAKwB,aAAtD,IAEHC,EAAoBf,EAASY,MACjC,SAAAC,GAAO,OAAIA,EAAQnB,SAAWe,EAAcf,MAArC,KAGLiB,EAbe,uBAcjBK,EAAAA,GAAAA,MAAA,6BAAkCP,EAAcnB,KAAhD,sBAdiB,8BAiBfyB,EAjBe,wBAkBjBC,EAAAA,GAAAA,MAAA,6BACwBP,EAAcf,OADtC,sBAlBiB,sDAyBXQ,EAAWO,GAAeQ,SAzBf,QA0BjBD,EAAAA,GAAAA,KAAW,+BACXR,IA3BiB,mDA6BjBQ,EAAAA,GAAAA,MAAY,4CA7BK,2DAAH,wDAiClB,OACE,SAAC,KAAD,CACEpB,cAAeA,EACfsB,iBAAkB9B,EAClB+B,SAAUb,EAHZ,SAKG,gBAAGc,EAAH,EAAGA,aAAH,OACC,SAAC,KAAD,CAAMC,aAAa,MAAnB,UACE,UAAC,KAAD,CACEC,MAAM,QACNC,EAAE,OACFC,GAAG,OACHC,OAAO,MACPC,aAAa,OACbC,YAAY,WACZC,UAAU,KACVC,GAAG,QARL,WAUE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,OACL1C,KAAK,OACL2C,QAAQ,UACRC,YAAY,aACZC,KAAK,KACLC,MAAM,iCAER,SAAC,KAAD,CACE9C,KAAK,OACL+C,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACT,SAAC,IAAD,CAAMC,MAAM,MAAMC,SAAS,KAAKhB,GAAG,IAAnC,SACGc,GAFM,KAMb,SAAC,KAAD,CACER,GAAIC,EAAAA,EACJC,KAAK,MACL1C,KAAK,SACL4C,YAAY,cACZC,KAAK,KACLX,GAAG,OACHY,MAAM,8DAER,SAAC,IAAD,CAAMI,SAAS,KAAKD,MAAM,WAAWf,GAAG,IAAxC,SAA4C,6BAG5C,SAAC,KAAD,CACElC,KAAK,SACL+C,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACT,SAAC,IAAD,CAAMC,MAAM,MAAMC,SAAS,KAAKhB,GAAG,IAAnC,SACGc,GAFM,KAMb,SAAC,IAAD,CACEN,KAAK,SACLS,YAAY,WACZR,QAAQ,UACRT,GAAG,OACHkB,UAAWtB,GAAgBhB,EAC3BuC,YAAY,gBACZC,iBAAiB,MACjBC,SAAUxC,GAAaF,EARzB,SASC,oBA1DN,GAkEN,E,oBCrIY2C,EAAS,WACpB,IAAM9D,GAAS+D,EAAAA,EAAAA,IAAYjE,GACrBkE,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACE3B,MAAM,QACNC,EAAE,OACFC,GAAG,OACH0B,GAAG,OACHzB,OAAO,MACPC,aAAa,OACbC,YAAY,WACZC,UAAU,KACVC,GAAG,QATL,UAWE,UAAC,IAAD,WAAW,yBAET,SAAC,EAAAsB,EAAD,CACEnB,KAAK,OACL1C,KAAK,SACL8D,MAAOpE,EACPqE,SAtBa,SAAAC,GACnBN,GAASO,EAAAA,EAAAA,GAAUD,EAAEE,cAAcJ,MAAM1C,QAC1C,EAqBOuB,QAAQ,UACRE,KAAK,WAKd,E,6BCrCYsB,EAAaC,EAAAA,GAAAA,GAAH,uEAKVC,EAAaD,EAAAA,GAAAA,GAAH,mfA2BVE,EAAeF,EAAAA,GAAAA,EAAH,iNC1BZG,EAAc,SAAC,GAAkB,IAAhB7D,EAAe,EAAfA,SAC5B,GAAuC8D,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBrB,EAAxB,KAAwBA,UAOxB,OACE,SAACe,EAAD,UACGzD,EAASgE,KAAI,WAAuBC,GAAvB,IAAG3E,EAAH,EAAGA,KAAMI,EAAT,EAASA,OAAQwE,EAAjB,EAAiBA,GAAjB,OACZ,UAACP,EAAD,YACE,SAACC,EAAD,UAAetE,KACf,SAACsE,EAAD,UAAelE,KACf,SAAC,IAAD,CACE+C,YAAY,WACZN,KAAK,KACLgC,QAAS,kBAbjBJ,EAa2CG,QAZ3ClD,EAAAA,GAAAA,KAAW,gCAYM,EACT6B,SAAUH,EAJZ,UAME,SAAC,MAAD,QATawB,EADL,KAgBnB,E,UC4BD,MA9CA,WACE,OAKIpE,EAAAA,EAAAA,MAJFsE,EADF,EACEA,QADF,IAEErE,KAAMC,OAFR,MAEmB,GAFnB,EAGc0C,EAHd,EAGEtC,WACWiE,EAJb,EAIE3B,WAGF4B,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,IAEJ,IAEMG,EC9B0B,SAACvE,EAAUhB,GACzC,IAAMwF,EAAmBxF,EAAO8B,cAChC,OAAOd,EAAShB,QAAO,SAAA6B,GAAO,OAC5BA,EAAQvB,KAAKwB,cAAc2D,SAASD,EADR,GAG/B,CDyBuBE,CAAmB1E,GAF5B+C,EAAAA,EAAAA,IAAYjE,IAI3B,OACE,iBAAK6F,UAAU,YAAf,WACE,iBAAKA,UAAU,UAAf,UACGjC,IAAa,SAACkC,EAAA,EAAD,KAEd,SAAC,IAAD,CAAMpC,SAAS,OAAOqC,WAAW,MAAMtC,MAAM,UAA7C,SAAuD,oBAGvD,SAAC1C,EAAD,QAEF,iBAAK8E,UAAU,UAAf,WACE,SAAC,IAAD,CAAMnC,SAAS,OAAOqC,WAAW,MAAMtC,MAAM,UAA7C,SAAuD,yBAGvD,SAACO,EAAD,KACA,SAAC,IAAD,CAAMN,SAAS,OAAOqC,WAAW,MAAMtC,MAAM,UAAUW,GAAG,OAA1D,SAAiE,qBAGhEqB,EAAgBO,SAAWT,GAC1B,SAACR,EAAD,CAAa7D,SAAUuE,KAEvB,SAAC,IAAD,CAAMhC,MAAM,MAAMC,SAAS,KAAKhB,GAAG,IAAnC,SAAuC,4BAOhD,C","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js","helpers/contactUtils.js"],"sourcesContent":["export const selectContacts = state => state.contacts.array;\nexport const selectFilter = state => state.filter.query;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\n\nimport {\n  useAddContactsMutation,\n  useFetchContactsQuery,\n} from 'redux/contactsApi';\n\nimport { FormControl, Input, Button, Text } from '@chakra-ui/react';\n\nconst phoneRegex = RegExp(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/);\n\nconst contactSchema = object({\n  name: string()\n    .min(6, 'Name must be at least 6 digits!')\n    .required('Name is required!'),\n  number: string()\n    .matches(phoneRegex, 'Invalid phone')\n    .required('Phone is required'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const { data: contacts = [] } = useFetchContactsQuery();\n  const [addContact, { isError, isFetching, isSuccess }] =\n    useAddContactsMutation();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const trimmedValues = {\n      name: values.name.trim(),\n      number: values.number.trim(),\n    };\n\n    const isDuplicateName = contacts.some(\n      contact => contact.name.toLowerCase() === trimmedValues.name.toLowerCase()\n    );\n    const isDuplicateNumber = contacts.some(\n      contact => contact.number === trimmedValues.number\n    );\n\n    if (isDuplicateName) {\n      toast.error(`Contact with this \"${trimmedValues.name}\" already exists!`);\n      return;\n    }\n    if (isDuplicateNumber) {\n      toast.error(\n        `Contact with this \"${trimmedValues.number}\" already exists!`\n      );\n      return;\n    }\n\n    try {\n      await addContact(trimmedValues).unwrap();\n      toast.info('Contact added successfully!');\n      resetForm();\n    } catch (error) {\n      toast.error('Failed to add contact. Please try again.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={contactSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <FormControl\n            width=\"360px\"\n            p=\"20px\"\n            mt=\"14px\"\n            border=\"1px\"\n            borderRadius=\"15px\"\n            borderColor=\"gray.200\"\n            boxShadow=\"lg\"\n            bg=\"white\"\n          >\n            <Field\n              as={Input}\n              type=\"text\"\n              name=\"name\"\n              variant=\"outline\"\n              placeholder=\"Enter name\"\n              size=\"md\"\n              title=\"Please enter a name contact\"\n            />\n            <ErrorMessage\n              name=\"name\"\n              component={({ children }) => (\n                <Text color=\"red\" fontSize=\"sm\" mt=\"1\">\n                  {children}\n                </Text>\n              )}\n            />\n            <Field\n              as={Input}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter phone\"\n              size=\"md\"\n              mt=\"12px\"\n              title=\"Please enter a phone number in the format (123) 456-7890\"\n            />\n            <Text fontSize=\"sm\" color=\"gray.500\" mt=\"2\">\n              Example: (123) 456-7890\n            </Text>\n            <ErrorMessage\n              name=\"number\"\n              component={({ children }) => (\n                <Text color=\"red\" fontSize=\"sm\" mt=\"1\">\n                  {children}\n                </Text>\n              )}\n            />\n            <Button\n              type=\"submit\"\n              colorScheme=\"telegram\"\n              variant=\"outline\"\n              mt=\"20px\"\n              isLoading={isSubmitting || isFetching}\n              loadingText=\"Contact added\"\n              spinnerPlacement=\"end\"\n              disabled={isSuccess || isError}\n            >\n              Add contact\n            </Button>\n          </FormControl>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FormControl, Input, FormLabel } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value.trim()));\n  };\n\n  return (\n    <FormControl\n      width=\"360px\"\n      p=\"20px\"\n      mt=\"14px\"\n      mb=\"40px\"\n      border=\"1px\"\n      borderRadius=\"15px\"\n      borderColor=\"gray.200\"\n      boxShadow=\"lg\"\n      bg=\"white\"\n    >\n      <FormLabel>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n          variant=\"outline\"\n          size=\"md\"\n        />\n      </FormLabel>\n    </FormControl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsUl = styled.ul`\n  list-style: none;\n  padding: 0 20px 0 0px;\n`;\n\nexport const ContactsLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 10px;\n  margin-bottom: 6px;\n  border-bottom: 1px solid #ccc;\n  border-radius: 10px;\n  background-color: #f5f5f5;\n  width: 360px;\n\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n  }\n\n  &:nth-child(2n + 1) {\n    background-color: #e9e9e9;\n  }\n\n  @media (max-width: 410px) {\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  }\n`;\n\nexport const ContactsText = styled.p`\n  margin: 0;\n  width: 120px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 8px;\n  }\n`;\n","import { useDeleteContactsMutation } from 'redux/contactsApi';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { Button } from '@chakra-ui/react';\nimport { ContactsUl, ContactsLi, ContactsText } from './ContactList.styled.jsx';\n\nexport const ContactList = ({ contacts }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n\n  const handleDeleteContact = contactId => {\n    deleteContact(contactId);\n    toast.info('Contact deleted successfully!');\n  };\n\n  return (\n    <ContactsUl>\n      {contacts.map(({ name, number, id }, index) => (\n        <ContactsLi key={id}>\n          <ContactsText>{name}</ContactsText>\n          <ContactsText>{number}</ContactsText>\n          <Button\n            colorScheme=\"telegram\"\n            size=\"sm\"\n            onClick={() => handleDeleteContact(id)}\n            disabled={isLoading}\n          >\n            <RiDeleteBinLine />\n          </Button>\n        </ContactsLi>\n      ))}\n    </ContactsUl>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport { selectFilter } from 'redux/selectors';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Text } from '@chakra-ui/react';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getVisibleContacts } from 'helpers/contactUtils';\n\nfunction Contacts() {\n  const {\n    refetch,\n    data: contacts = [],\n    isFetching: isLoading,\n    isLoading: isFirstLoading,\n  } = useFetchContactsQuery();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        {isLoading && <Loader />}\n\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\">\n          Create Contact\n        </Text>\n        <ContactForm />\n      </div>\n      <div className=\"section\">\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\">\n          Search Сontact\n        </Text>\n        <Filter />\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\" mb=\"16px\">\n          My Сontacts\n        </Text>\n        {visibleContacts.length && !isFirstLoading ? (\n          <ContactList contacts={visibleContacts} />\n        ) : (\n          <Text color=\"red\" fontSize=\"lg\" mt=\"1\">\n            Contact not found!\n          </Text>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Contacts;\n","export const getVisibleContacts = (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n"],"names":["selectFilter","state","filter","query","phoneRegex","RegExp","contactSchema","object","name","string","min","required","number","matches","initialValues","ContactForm","useFetchContactsQuery","data","contacts","useAddContactsMutation","addContact","isError","isFetching","isSuccess","handleSubmit","values","resetForm","trimmedValues","trim","isDuplicateName","some","contact","toLowerCase","isDuplicateNumber","toast","unwrap","validationSchema","onSubmit","isSubmitting","autoComplete","width","p","mt","border","borderRadius","borderColor","boxShadow","bg","as","Input","type","variant","placeholder","size","title","component","children","color","fontSize","colorScheme","isLoading","loadingText","spinnerPlacement","disabled","Filter","useSelector","dispatch","useDispatch","mb","I","value","onChange","e","setFilter","currentTarget","ContactsUl","styled","ContactsLi","ContactsText","ContactList","useDeleteContactsMutation","deleteContact","map","index","id","onClick","refetch","isFirstLoading","useEffect","visibleContacts","normalizedFilter","includes","getVisibleContacts","className","Loader","fontWeight","length"],"sourceRoot":""}