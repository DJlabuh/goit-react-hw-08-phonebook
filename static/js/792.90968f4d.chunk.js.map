{"version":3,"file":"static/js/792.90968f4d.chunk.js","mappings":"+NAGIA,GAAWC,EAAAA,EAAAA,GAAW,CACxBC,YAAa,WACbC,MAAsBC,EAAAA,EAAAA,MAAK,IAAK,CAAEC,KAAM,OAAQC,OAAQ,eAAgBC,cAAe,QAASC,YAAa,IAAKC,SAAU,EAC1GC,EAAAA,EAAAA,KAAI,OAAQ,CAAEC,EAAG,gEACjBD,EAAAA,EAAAA,KAAI,OAAQ,CAAEC,EAAG,iE,mGCkHrC,MA5GA,WACE,OAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAiBA,OACE,gBAAKC,UAAU,YAAf,UACE,gBAAKA,UAAU,UAAf,UACE,SAAC,IAAD,CAAMC,MAAM,SAASC,QAAQ,SAA7B,UACE,iBAAMC,SAjBO,SAAAC,GACnBA,EAAMC,iBAENC,QAAQC,IAAI,QAASb,GACrBY,QAAQC,IAAI,SAAUX,GACtBU,QAAQC,IAAI,YAAaT,GAGzBH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMO,UACE,UAAC,KAAD,CACES,MAAM,QACNC,EAAE,OACFC,GAAG,OACHC,OAAO,MACPC,aAAa,OACbC,YAAY,WACZC,UAAU,KACVC,GAAG,QARL,WAUE,SAAC,IAAD,CAAWC,UAAU,SAASC,WAAW,MAAMC,GAAG,IAAIC,GAAG,OAAzD,SAAgE,cAGhE,UAAC,IAAD,CAAYC,KAAK,KAAjB,WACE,SAAC,IAAD,CAAkBC,cAAc,OAAhC,UACE,SAAC1C,EAAD,CAAU2C,MAAM,gBAElB,SAAC,EAAAC,EAAD,CACEC,KAAK,OACL9B,KAAK,OACL+B,MAAO/B,EACPgC,QAAQ,UACRC,YAAY,YACZP,KAAK,KACLD,GAAG,OACHS,SAAU,SAAAC,GAAC,OAAIlC,EAAQkC,EAAEC,OAAOL,MAArB,EACXM,UAAQ,QAGZ,UAAC,IAAD,CAAYX,KAAK,KAAjB,WACE,SAAC,IAAD,CAAkBC,cAAc,OAAhC,UACE,SAAC,IAAD,CAAWC,MAAM,gBAEnB,SAAC,EAAAC,EAAD,CACEC,KAAK,QACL9B,KAAK,QACL+B,MAAO7B,EACP8B,QAAQ,UACRC,YAAY,aACZP,KAAK,KACLD,GAAG,OACHS,SAAU,SAAAC,GAAC,OAAIhC,EAASgC,EAAEC,OAAOL,MAAtB,EACXM,UAAQ,QAGZ,UAAC,IAAD,CAAYX,KAAK,KAAKD,GAAG,OAAzB,WACE,SAAC,IAAD,CAAkBE,cAAc,OAAhC,UACE,SAAC,IAAD,CAAYC,MAAM,gBAEpB,SAAC,EAAAC,EAAD,CACES,GAAG,SACHR,KAAMhC,EAAO,OAAS,WACtBE,KAAK,WACLgC,QAAQ,UACRC,YAAY,gBACZP,KAAK,KACLD,GAAG,OACHM,MAAO3B,EACP8B,SAAU,SAAAC,GAAC,OAAI9B,EAAY8B,EAAEC,OAAOL,MAAzB,KAEb,SAAC,IAAD,CAAmBjB,MAAM,OAAzB,UACE,SAAC,IAAD,CAAQyB,EAAE,SAASb,KAAK,KAAKc,QAjFzB,kBAAMzC,GAASD,EAAf,EAiFJ,SACGA,EAAO,OAAS,eAIvB,SAAC,IAAD,CACEgC,KAAK,SACLW,WAAW,SAAC,IAAD,IACXC,YAAY,WACZV,QAAQ,UAJV,SAKC,uBASd,C","sources":["../node_modules/@chakra-ui/icons/dist/chunk-TEXEZHMQ.mjs","pages/Register.js"],"sourcesContent":["// src/Edit.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar EditIcon = createIcon({\n  displayName: \"EditIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeWidth: \"2\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" })\n  ] })\n});\n\nexport {\n  EditIcon\n};\n","import React, { useState } from 'react';\nimport { EditIcon, EmailIcon, UnlockIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport {\n  Flex,\n  FormControl,\n  FormLabel,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Input,\n  Button,\n} from '@chakra-ui/react';\n\nfunction SignUp() {\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleClick = () => setShow(!show);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    console.log('Name:', name);\n    console.log('Email:', email);\n    console.log('Password:', password);\n\n    // Reset the form\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <Flex align=\"center\" justify=\"center\">\n          <form onSubmit={handleSubmit}>\n            <FormControl\n              width=\"500px\"\n              p=\"20px\"\n              mt=\"20px\"\n              border=\"1px\"\n              borderRadius=\"15px\"\n              borderColor=\"gray.200\"\n              boxShadow=\"lg\"\n              bg=\"white\"\n            >\n              <FormLabel textAlign=\"center\" fontWeight=\"700\" mr=\"0\" mb=\"20px\">\n                REGISTER\n              </FormLabel>\n              <InputGroup size=\"md\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <EditIcon color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  type=\"name\"\n                  name=\"name\"\n                  value={name}\n                  variant=\"outline\"\n                  placeholder=\"Your name\"\n                  size=\"md\"\n                  mb=\"10px\"\n                  onChange={e => setName(e.target.value)}\n                  required\n                />\n              </InputGroup>\n              <InputGroup size=\"md\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <EmailIcon color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  variant=\"outline\"\n                  placeholder=\"Your email\"\n                  size=\"md\"\n                  mb=\"10px\"\n                  onChange={e => setEmail(e.target.value)}\n                  required\n                />\n              </InputGroup>\n              <InputGroup size=\"md\" mb=\"20px\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <UnlockIcon color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  pr=\"4.5rem\"\n                  type={show ? 'text' : 'password'}\n                  name=\"password\"\n                  variant=\"outline\"\n                  placeholder=\"Your password\"\n                  size=\"md\"\n                  mb=\"10px\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n                <InputRightElement width=\"5rem\">\n                  <Button h=\"1.2rem\" size=\"xs\" onClick={handleClick}>\n                    {show ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n              <Button\n                type=\"submit\"\n                rightIcon={<ArrowForwardIcon />}\n                colorScheme=\"telegram\"\n                variant=\"outline\"\n              >\n                REGISTER\n              </Button>\n            </FormControl>\n          </form>\n        </Flex>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"names":["EditIcon","createIcon","displayName","path","jsxs","fill","stroke","strokeLinecap","strokeWidth","children","jsx","d","useState","show","setShow","name","setName","email","setEmail","password","setPassword","className","align","justify","onSubmit","event","preventDefault","console","log","width","p","mt","border","borderRadius","borderColor","boxShadow","bg","textAlign","fontWeight","mr","mb","size","pointerEvents","color","I","type","value","variant","placeholder","onChange","e","target","required","pr","h","onClick","rightIcon","colorScheme"],"sourceRoot":""}