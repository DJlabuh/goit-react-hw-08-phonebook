{"version":3,"file":"static/js/682.014dc939.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","helpers/contactUtils.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.array;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import styled from 'styled-components';\n\nexport const FormContact = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  margin-top: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 100%;\n`;\n\nexport const FormButton = styled.button`\n  padding: 10px;\n  background-color: #0088cc;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n\n  &:hover {\n    background-color: #007ab8;\n  }\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  FormContact,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isDuplicateName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isDuplicateNumber = contacts.some(contact => contact.phone === phone);\n\n    if (isDuplicateName) {\n      toast.error(`Contact with this ${name} already exists!`);\n      return;\n    }\n\n    if (isDuplicateNumber) {\n      toast.error(`Contact with this ${phone} already exists!`);\n      return;\n    }\n\n    dispatch(addContacts({ name, phone }));\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <FormContact onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Telephone\n        <FormInput\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  margin-top: 20px;\n  margin-bottom: 35px;\n  max-width: 300px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 100%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter.query}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsUl = styled.ul`\n  list-style: none;\n  padding: 0 20px 0 0px;\n`;\n\nexport const ContactsLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  margin-bottom: 6px;\n  border-bottom: 1px solid #ccc;\n  border-radius: 10px;\n  background-color: ${props => (props.dark ? '#f5f5f5' : 'inherit')};\n  width: 380px;\n\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 410px) {\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  }\n`;\n\nexport const ContactsText = styled.p`\n  margin: 0;\n  width: 120px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 8px;\n  }\n`;\n","export const getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter =\n    filter && filter.query ? filter.query.toLowerCase() : '';\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { RiDeleteBinLine } from 'react-icons/ri';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport { deleteContacts } from 'redux/operations';\nimport { Button } from '@chakra-ui/react';\nimport { ContactsUl, ContactsLi, ContactsText } from './ContactList.styled.jsx';\n\nimport { getVisibleContacts } from 'helpers/contactUtils';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n  };\n\n  return (\n    <ContactsUl>\n      {visibleContacts.map(({ name, phone, id }, index) => (\n        <ContactsLi key={id} dark={index % 2 === 0}>\n          <ContactsText>{name}</ContactsText>\n          <ContactsText>{phone}</ContactsText>\n          <Button\n            colorScheme=\"telegram\"\n            size=\"sm\"\n            onClick={() => handleDeleteContact(id)}\n          >\n            <RiDeleteBinLine />\n          </Button>\n        </ContactsLi>\n      ))}\n    </ContactsUl>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter, selectContacts, selectIsLoading } from 'redux/selectors';\n\nimport { fetchContacts } from 'redux/operations';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Text } from \"@chakra-ui/react\"\n\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getVisibleContacts } from 'helpers/contactUtils';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\">Create Contact</Text>\n        <ContactForm />\n      </div>\n      <div className='section'>\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\">Search Сontact</Text>\n        <Filter />\n        {isLoading ? (\n          <Loader />\n        ) : visibleContacts.length ? (\n          <ContactList />\n        ) : (\n          <p>Contact not found!</p>\n        )}\n      <ToastContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","array","selectFilter","filter","selectIsLoading","isLoading","FormContact","styled","FormLabel","FormInput","FormButton","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","phone","setPhone","onSubmit","e","preventDefault","isDuplicateName","some","contact","toLowerCase","isDuplicateNumber","toast","addContacts","type","value","onChange","target","pattern","title","required","FilterBox","FilterLabel","FilterInput","Filter","query","setFilter","currentTarget","ContactsUl","ContactsLi","props","dark","ContactsText","getVisibleContacts","normalizedFilter","includes","ContactList","visibleContacts","map","index","id","colorScheme","size","onClick","contactId","deleteContacts","useEffect","fetchContacts","className","fontSize","fontWeight","color","Loader","length"],"sourceRoot":""}