{"version":3,"file":"static/js/682.23e54f6a.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","helpers/contactUtils.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.array;\nexport const selectFilter = state => state.filter.query;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import styled from 'styled-components';\n\nexport const FormContact = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  box-shadow: 0px 10px 13px -7px #000000;\n  max-width: 300px;\n  margin-top: 10px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 100%;\n`;\n\nexport const FormButton = styled.button`\n  padding: 10px;\n  background-color: #0088cc;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n\n  &:hover {\n    background-color: #007ab8;\n  }\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  FormContact,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nimport {\n  useAddContactsMutation,\n  useFetchContactsQuery,\n} from 'redux/contactsApi';\n\nexport const ContactForm = () => {\n  const { data: contacts = [] } = useFetchContactsQuery();\n  const [addContacts] = useAddContactsMutation();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isDuplicateName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isDuplicateNumber = contacts.some(contact => contact.phone === phone);\n\n    if (isDuplicateName) {\n      toast.error(`Contact with this ${name} already exists!`);\n      return;\n    }\n\n    if (isDuplicateNumber) {\n      toast.error(`Contact with this ${phone} already exists!`);\n      return;\n    }\n\n    addContacts({ name, phone })\n      .then(() => {\n        setName('');\n        setPhone('');\n      })\n      .catch(() => {\n        toast.error('Failed to add contact.');\n      });\n  };\n\n  return (\n    <FormContact onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Telephone\n        <FormInput\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  box-shadow: 0px 10px 13px -7px #000000;\n  margin-top: 10px;\n  margin-bottom: 40px;\n  max-width: 300px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 100%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterBox>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter.query}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsUl = styled.ul`\n  list-style: none;\n  padding: 0 20px 0 0px;\n`;\n\nexport const ContactsLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  margin-bottom: 6px;\n  border-bottom: 1px solid #ccc;\n  border-radius: 10px;\n  background-color: #f5f5f5;\n  width: 380px;\n\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 410px) {\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  }\n`;\n\nexport const ContactsText = styled.p`\n  margin: 0;\n  width: 120px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 8px;\n  }\n`;\n","export const getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter =\n    filter && filter.query ? filter.query.toLowerCase() : '';\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { RiDeleteBinLine } from 'react-icons/ri';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport { useDeleteContactsMutation } from 'redux/contactsApi';\nimport { Button } from '@chakra-ui/react';\nimport { ContactsUl, ContactsLi, ContactsText } from './ContactList.styled.jsx';\n\nimport { getVisibleContacts } from 'helpers/contactUtils';\n\nexport const ContactList = () => {\n  const [deleteContact] = useDeleteContactsMutation();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ContactsUl>\n      {visibleContacts.map(({ name, phone, id }, index) => (\n        <ContactsLi key={id} dark={index % 2 === 0}>\n          <ContactsText>{name}</ContactsText>\n          <ContactsText>{phone}</ContactsText>\n          <Button\n            colorScheme=\"telegram\"\n            size=\"sm\"\n            onClick={() => handleDeleteContact(id)}\n          >\n            <RiDeleteBinLine />\n          </Button>\n        </ContactsLi>\n      ))}\n    </ContactsUl>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport { selectFilter } from 'redux/selectors';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Text } from \"@chakra-ui/react\"\n\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getVisibleContacts } from 'helpers/contactUtils';\n\nfunction Contacts() {\n  const {\n    refetch,\n    data: contacts = [],\n    isFetching: isLoading,\n    isLoading: isFirstLoading,\n    // error,\n  } = useFetchContactsQuery();\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\">Create Contact</Text>\n        <ContactForm />\n      </div>\n      <div className='section'>\n        <Text fontSize=\"18px\" fontWeight=\"700\" color=\"#007ab8\">Search Сontact</Text>\n        <Filter />\n        {isLoading ? (\n          <Loader />\n        ) : visibleContacts.length && !isFirstLoading? (\n          <ContactList />\n        ) : (\n          <p>Contact not found!</p>\n        )}\n      <ToastContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","array","selectFilter","filter","query","FormContact","styled","FormLabel","FormInput","FormButton","ContactForm","useFetchContactsQuery","data","useAddContactsMutation","addContacts","useState","name","setName","phone","setPhone","onSubmit","e","preventDefault","isDuplicateName","some","contact","toLowerCase","isDuplicateNumber","toast","then","catch","type","value","onChange","target","pattern","title","required","FilterBox","FilterLabel","FilterInput","Filter","useSelector","dispatch","useDispatch","setFilter","currentTarget","ContactsUl","ContactsLi","ContactsText","getVisibleContacts","normalizedFilter","includes","ContactList","useDeleteContactsMutation","deleteContact","visibleContacts","map","index","id","dark","colorScheme","size","onClick","refetch","isLoading","isFetching","isFirstLoading","useEffect","className","fontSize","fontWeight","color","Loader","length"],"sourceRoot":""}