{"version":3,"file":"static/js/847.2aea2964.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","pages/Home.js","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Text, Heading, List, ListItem, ListIcon } from '@chakra-ui/react';\nimport { MdCheckCircle } from 'react-icons/md';\n\nconst HomePage = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <Heading as=\"h1\" color=\"#007ab8\" fontSize=\"26px\" mt=\"25px\" mb=\"25px\">\n          Welcome to the Contact Management App\n        </Heading>\n        <Text mb=\"14px\" fontSize=\"20px\">\n          This is the home page of the contact management app.\n        </Text>\n        <Text mb=\"14px\" fontSize=\"20px\">\n          You can use this app to store and manage your contacts.\n        </Text>\n        <Text as=\"mark\" fontSize=\"20px\">\n          To get started, you can:\n        </Text>\n        <List mt=\"10px\" color=\"#007ab8\" fontSize=\"20px\">\n          <ListItem mb=\"px\">\n            <ListIcon as={MdCheckCircle} color=\"#007ab8\" />\n            <Link to=\"/register\">Register</Link>\n          </ListItem>\n          <ListItem>\n            <ListIcon as={MdCheckCircle} color=\"#007ab8\" />\n            <Link to=\"/login\">Log In</Link>\n          </ListItem>\n        </List>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["createContext","name","errorMessage","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","children","styleType","stylePosition","spacing","rest","validChildren","getValidChildren","spacingStyle","mt","jsx","value","chakra","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","ListItem","item","ListIcon","Icon","icon","className","color","fontSize","mb","MdCheckCircle","to","Text","useStyleConfig","align","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","cx","object","clone","Object","assign","key","Children","filter","child","isValidElement"],"sourceRoot":""}