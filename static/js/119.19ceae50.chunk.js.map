{"version":3,"file":"static/js/119.19ceae50.chunk.js","mappings":"kRAsGA,UAzFA,WACE,OAAwBA,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAeA,OACE,gBAAKC,UAAU,YAAf,UACE,gBAAKA,UAAU,UAAf,UACE,SAAC,IAAD,CAAMC,MAAM,SAASC,QAAQ,SAA7B,UACE,iBAAMC,SAfO,SAAAC,GACnBA,EAAMC,iBAENC,QAAQC,IAAI,SAAUX,GACtBU,QAAQC,IAAI,YAAaT,GAGzBD,EAAS,IACTE,EAAY,GACb,EAMO,UACE,UAAC,KAAD,CACES,MAAM,QACNC,EAAE,OACFC,GAAG,OACHC,OAAO,MACPC,aAAa,OACbC,YAAY,WACZC,UAAU,KACVC,GAAG,QARL,WAUE,SAAC,IAAD,CAAWC,UAAU,SAASC,WAAW,MAAMC,GAAG,IAAIC,GAAG,OAAzD,SAAgE,WAGhE,UAAC,IAAD,CAAYC,KAAK,KAAjB,WACE,SAAC,IAAD,CAAkBC,cAAc,OAAhC,UACE,SAAC,IAAD,CAAWC,MAAM,gBAEnB,SAAC,EAAAC,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAO9B,EACP+B,QAAQ,UACRC,YAAY,mBACZR,KAAK,KACLD,GAAG,OACHU,SAAU,SAAAC,GAAC,OAAIjC,EAASiC,EAAEC,OAAOL,MAAtB,EACXM,UAAQ,QAGZ,UAAC,IAAD,CAAYZ,KAAK,KAAKD,GAAG,OAAzB,WACE,SAAC,IAAD,CAAkBE,cAAc,OAAhC,UACE,SAAC,IAAD,CAAYC,MAAM,gBAEpB,SAAC,EAAAC,EAAD,CACEU,GAAG,SACHT,KAAM9B,EAAO,OAAS,WACtB+B,KAAK,WACLE,QAAQ,UACRC,YAAY,iBACZR,KAAK,KACLD,GAAG,OACHO,MAAO5B,EACP+B,SAAU,SAAAC,GAAC,OAAI/B,EAAY+B,EAAEC,OAAOL,MAAzB,KAEb,SAAC,IAAD,CAAmBlB,MAAM,OAAzB,UACE,SAAC,IAAD,CAAQ0B,EAAE,SAASd,KAAK,KAAKe,QA/DzB,kBAAMxC,GAASD,EAAf,EA+DJ,SACGA,EAAO,OAAS,eAIvB,SAAC,IAAD,CACE8B,KAAK,SACLY,WAAW,SAAC,IAAD,IACXC,YAAY,WACZV,QAAQ,UAJV,SAKC,qBASd,C","sources":["pages/LogIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { EmailIcon, UnlockIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport {\n  Flex,\n  FormControl,\n  FormLabel,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Input,\n  Button,\n} from '@chakra-ui/react';\n\nfunction LogIn() {\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleClick = () => setShow(!show);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    console.log('Email:', email);\n    console.log('Password:', password);\n\n    // Reset the form\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <Flex align=\"center\" justify=\"center\">\n          <form onSubmit={handleSubmit}>\n            <FormControl\n              width=\"500px\"\n              p=\"20px\"\n              mt=\"20px\"\n              border=\"1px\"\n              borderRadius=\"15px\"\n              borderColor=\"gray.200\"\n              boxShadow=\"lg\"\n              bg=\"white\"\n            >\n              <FormLabel textAlign=\"center\" fontWeight=\"700\" mr=\"0\" mb=\"20px\">\n                LOGIN\n              </FormLabel>\n              <InputGroup size=\"md\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <EmailIcon color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  variant=\"outline\"\n                  placeholder=\"Enter your email\"\n                  size=\"md\"\n                  mb=\"10px\"\n                  onChange={e => setEmail(e.target.value)}\n                  required\n                />\n              </InputGroup>\n              <InputGroup size=\"md\" mb=\"20px\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <UnlockIcon color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  pr=\"4.5rem\"\n                  type={show ? 'text' : 'password'}\n                  name=\"password\"\n                  variant=\"outline\"\n                  placeholder=\"Enter password\"\n                  size=\"md\"\n                  mb=\"10px\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n                <InputRightElement width=\"5rem\">\n                  <Button h=\"1.2rem\" size=\"xs\" onClick={handleClick}>\n                    {show ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n              <Button\n                type=\"submit\"\n                rightIcon={<ArrowForwardIcon />}\n                colorScheme=\"telegram\"\n                variant=\"outline\"\n              >\n                Log In\n              </Button>\n            </FormControl>\n          </form>\n        </Flex>\n      </div>\n    </div>\n  );\n}\n\nexport default LogIn;\n"],"names":["useState","show","setShow","email","setEmail","password","setPassword","className","align","justify","onSubmit","event","preventDefault","console","log","width","p","mt","border","borderRadius","borderColor","boxShadow","bg","textAlign","fontWeight","mr","mb","size","pointerEvents","color","I","type","name","value","variant","placeholder","onChange","e","target","required","pr","h","onClick","rightIcon","colorScheme"],"sourceRoot":""}